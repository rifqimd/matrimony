(()=>{"use strict";const e=new class{audioPlayer(e,t){const a=jQuery,s={repeat:!0};t.i18n={},"undefined"!=typeof h5ap_i18n&&(t.i18n=h5ap_i18n);let{controls:n,seekTime:l,i18n:i,title:o,artist:r,disablePause:p,poster:d,muted:c,autoplay:u,startTime:y,source:v,skin:m,disableDownload:_,fusionDownload:f,color:g,background:b,repeat:h,primaryColor:k}=t;"default"===m&&!1===_&&(s.download=!0),"fusion"===m&&!0===f&&(s.download=!0),"fusion"===m&&(n=this.skinFusion(d,o,v,s)),"wave"===m&&(n=this.skinWave(d,o,r,b,g)),"card-1"===m&&(n=this.skinCardOne({title:o,artist:r})),"card-2"===m&&(n=this.skinCardTwo({title:o,artist:r,poster:d})),"simple-1"===m&&(n=this.skinSimpleOne({title:o,artist:r})),"simple-2"===m&&(n=this.skinSimpleTwo({title:o,artist:r,poster:d})),"stamp"===m&&(n=this.skinStamp()),a(".skin_default .plyr__control").on("focus",(function(){setTimeout((()=>{this.blur()}),1e3)}));let w=localStorage.getItem("plyr");const S="undefined"!=typeof InstallTrigger;u&&w&&S?(w=JSON.parse(w),w.muted=!0,localStorage.setItem("plyr",JSON.stringify(w))):w&&(w=JSON.parse(w),w.muted=!1,localStorage.setItem("plyr",JSON.stringify(w)));const P=new Plyr(a(e).find("audio"),{controls:n,i18n:i,seekTime:l,loop:{active:h},muted:c,autoplay:u,speed:{selected:1,options:h5apPlayer?.speed.map(Number)}});P.on("ready",(function(){const e=parseInt(y);P.currentTime=e;const t=setInterval((()=>{e>P.currentTime?P.currentTime=e:clearInterval(t)}),50)})),"default"!=m&&(P.speed=1),u&&P.play(),"wave"===m&&P&&this.wave(e,P,k,b),"card-1"===m&&P&&this.cardOne(e,P,d),"card-2"===m&&P&&this.cardTwo(e,P,d),p&&this.disablePause(P),"stamp"===t.skin&&""!=g&&(a(e).find(".StampAudioPlayerSkin button svg").css("fill",g),a(e).find(".StampAudioPlayerSkin .extraOptions .audioTitle").css("color",g),a(e).find(".StampAudioPlayerSkin .mainOptions .controls .audioProgressView .progressWrap .currentTime").css("color",g),a(e).find(".StampAudioPlayerSkin .mainOptions .controls .audioProgressView .progressWrap .totalTime").css("color",g),a(e).find(".StampAudioPlayerSkin .mainOptions .controls .playPauseAudio").css("border-color",g),a(e).find(".audioTitle").text(o)),a(e).width()<500&&"fusion"===m&&a(e).addClass("skinFusionMobile"),h5apPlayer?.multipleAudio||a(e).find('.plyr__control[data-plyr="play"]').on("click",(()=>{P.playing&&this.disableOtherPlayer(P,!0)})),a(e).find('[data-plyr="repeat"]').on("click",(function(){a(this).attr("data-active","true"===a(this).attr("data-active")?"false":"true")})),!0===h&&a(e).find('[data-plyr="repeat"]').attr("data-active","true"),P.on("ended",(function(){"true"===a(e).find('[data-plyr="repeat"]').attr("data-active")&&P.play()})),a(e).find('[data-plyr="playlist"]').on("click",(function(){a(this).attr("data-active","true"===a(this).attr("data-active")?"false":"true")}));let x=null;P.on("ready",(function(){const e=P.elements.container?.nextElementSibling;e&&e.classList.contains("h5ap_lp")&&(e.style.display="none"),P.source?.includes("soundcloud")&&(P.speed=1,x&&clearInterval(x),x=setInterval((()=>{if(!P.playing){let e=v;e=v.includes("?")?v+`&_${parseInt(100*Math.random(255))}`:v+`?_${parseInt(100*Math.random(255))}`,P.source={type:"audio",title:"Audio File",sources:[{src:e,type:"audio/mp3"}]}}}),18e4))}))}quickPlayer(e){const t=jQuery,a=t(e).data("options");a.i18n={},"undefined"!=typeof h5ap_i18n&&(a.i18n=h5ap_i18n);const{seekTime:s,controls:n,i18n:l}=a,i=new Plyr(t(e).find("audio"),{controls:n,i18n:l,seekTime:s,speed:{selected:1,options:h5apPlayer?.speed.map(Number)}});h5apPlayer?.multipleAudio||t(e).find('.plyr__control[data-plyr="play"]').on("click",(()=>{i.playing&&this.disableOtherPlayer(i,!0)}))}stickyPlayer(e){const t=jQuery,a=t(e).find(".icon-no-alt"),s=t(e).find(".icon-minus"),n=t(e).find(".icon-plus"),l=t(e).data("poster"),i=t(e).data("source"),o=t(e).data("title"),r=t(e).data("options"),{initialVolume:p,skin:d,background:c}=r,u={};!0===r?.stickyDownload&&(u.download=!0),!0===r?.repeat&&(u.repeat=!0),t(window).on("scroll",(function(){window.pageYOffset>300&&t(e).fadeIn()}));let y="";y="simple"===d?this.skinSimple(o,l,c):this.skinFusion(l,o,i,u);let v=localStorage.getItem("h5apStickyplaying"),m={controls:y};if(r?.remember&&"false"!=v){let e=localStorage.getItem("plyr");e=JSON.parse(e),e.volume=0,e.muted=!0,localStorage.setItem("plyr",JSON.stringify(e))}const _=new Plyr(t(e).find("audio"),m);_.speed=1,"false"!=v&&(v=JSON.parse(v),setTimeout((()=>{_.volume=.5,_.currentTime=v?.time}),100),_.play()),h5apPlayer?.multipleAudio||t(e).find('.plyr__control[data-plyr="play"]').on("click",(()=>{_.playing&&this.disableOtherPlayer(_,!0)})),a.on("click",(function(){t(e).fadeOut(),t(e).remove(),_.stop()})),s.on("click",(function(){t(e).addClass("minimized"),t(e).removeClass("maximized")})),n.on("click",(function(){t(e).addClass("maximized"),t(e).removeClass("minimized")})),_.volume=p/100,t(e).find('[data-plyr="repeat"]').on("click",(function(){t(this).attr("data-active","true"===t(this).attr("data-active")?"false":"true")})),!0===r?.repeat&&t(e).find('[data-plyr="repeat"]').attr("data-active","true"),_.on("ended",(function(){"true"===t(e).find('[data-plyr="repeat"]').attr("data-active")&&_.play()})),window.onbeforeunload=()=>{if(_.playing){const t={time:_.currentTime};e[0]&&(t.html=y,t.source=_.source),localStorage.setItem("h5apStickyplaying",JSON.stringify(t))}else localStorage.setItem("h5apStickyplaying",!1)}}stickyPlayer2(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],a=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const s=this.getDetectorData(e,{options:t,infos:a,initializer:"stickyPlayer2"});if(!s)return!1;const{wrapper:n,options:l}=s,i=jQuery,o=i(n).find(".icon-no-alt"),r=i(n).find(".icon-minus"),p=i(n).find(".icon-plus"),d=i(n).data("poster"),c=i(n).data("source"),u=i(n).data("title"),{initialVolume:y,skin:v,background:m}=l,_={};i(n).removeAttr("data-poster"),i(n).removeAttr("data-source"),i(n).removeAttr("data-title"),i(n).removeAttr("data-options"),!0===l?.stickyDownload&&(_.download=!0),!0===l?.repeat&&(_.repeat=!0),i(window).on("scroll",(function(){window.pageYOffset>300&&i(n).fadeIn()}));let f="";f="simple"===v?this.skinSimple(u,d,m):this.skinFusion(d,u,c,_);let g=localStorage.getItem("h5apStickyplaying"),b={controls:f};if(l?.remember&&"false"!=g){let e=localStorage.getItem("plyr")||"{}";e=JSON.parse(e),e.volume=0,e.muted=!0,localStorage.setItem("plyr",JSON.stringify(e))}const h=new Plyr(i(n).find("audio"),b);"false"!=g&&(g=JSON.parse(g),setTimeout((()=>{h.volume=.5,h.currentTime=g?.time}),100),h.play()),h5apPlayer?.multipleAudio||i(n).find('.plyr__control[data-plyr="play"]').on("click",(()=>{h.playing&&this.disableOtherPlayer(h,!0)})),o.on("click",(function(){i(n).fadeOut(),i(n).remove(),h.stop()})),r.on("click",(function(){i(n).addClass("minimized"),i(n).removeClass("maximized")})),p.on("click",(function(){i(n).addClass("maximized"),i(n).removeClass("minimized")})),h.volume=y/100,i(n).find('[data-plyr="repeat"]').on("click",(function(){i(this).attr("data-active","true"===i(this).attr("data-active")?"false":"true")})),!0===l?.repeat&&i(n).find('[data-plyr="repeat"]').attr("data-active","true"),h.on("ended",(function(){"true"===i(n).find('[data-plyr="repeat"]').attr("data-active")&&h.play()}))}disableOtherPlayer(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const a=jQuery;a("audio").each((function(){a(this)[0].pause()})),t?e?.play():e?.pause()}skinFusion(){let e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,t=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{download:!1};return`<div class="plyr__controls radius">\n    <div class="plyr__controls rewind_play_fastforward">\n    <img class="thumbnails" src="${arguments.length>0&&void 0!==arguments[0]?arguments[0]:null}" alt="">\n    <div class="plyr__controls">\n    <button type="button" class="plyr__control" data-plyr="rewind">\n      <svg role="presentation"><use xlink:href="#plyr-rewind"></use></svg>\n      <span class="plyr__tooltip" role="tooltip">Rewind {seektime} secs</span>\n    </button>\n    <button type="button" class="plyr__control" aria-label="Play, {title}" data-plyr="play">\n      <svg class="icon--pressed" role="presentation"><use xlink:href="#plyr-pause"></use></svg>\n      <svg class="icon--not-pressed" role="presentation"><use xlink:href="#plyr-play"></use></svg>\n      <span class="label--pressed plyr__tooltip" role="tooltip">Pause</span>\n      <span class="label--not-pressed plyr__tooltip" role="tooltip">Play</span>\n    </button>\n    <button type="button" class="plyr__control" data-plyr="fast-forward">\n      <svg role="presentation"><use xlink:href="#plyr-fast-forward"></use></svg>\n      <span class="plyr__tooltip" role="tooltip">Forward {seektime} secs</span>\n    </button>\n    </div>\n    </div>\n    <div class="infos">\n      <div class="title">\n        <h3>${arguments.length>1&&void 0!==arguments[1]?arguments[1]:null}</h3>\n    </div>\n        <div class="time_progress">\n        <div class="plyr__time plyr__time--current" aria-label="Current time">00:00</div>\n        <div class="plyr__progress">\n          <input data-plyr="seek" type="range" min="0" max="100" step="0.01" value="0" aria-label="Seek">\n          <progress class="plyr__progress__buffer" min="0" max="100" value="0">% buffered</progress>\n          <span role="tooltip" class="plyr__tooltip">00:00</span>\n        </div>\n        <div class="plyr__time plyr__time--duration" aria-label="Duration">00:00</div>\n        </div>\n      </div>\n    <div class="other_controls">\n      <div class="extra_controls">\n        ${!0===t?.download?`<a class="plyr__controls__item plyr__control plyr__download" href="${e}" target="_blank" download data-plyr="download">\n          <svg aria-hidden="true" focusable="false">\n            <use xlink:href="#plyr-download"></use>\n          </svg>\n          <span class="plyr__sr-only">Download</span>\n        </a>`:""}\n        ${!0===t?.repeat?'<button type="button" data-active="false" class="plyr__control" data-plyr="repeat"><svg class="icon">\n        <use xlink:href="#exchange"></use></button>':""}\n        ${!0===t?.playlist?'<button type="button" class="plyr__control" data-active="true" data-plyr="playlist"><span class="dashicons dashicons-playlist-audio"></span></button>':""}\n      </div>\n      <div class="volume_controls">\n      <button type="button" class="plyr__control" aria-label="Mute" data-plyr="mute">\n          <svg class="icon--pressed" role="presentation"><use xlink:href="#plyr-muted"></use></svg>\n          <svg class="icon--not-pressed" role="presentation"><use xlink:href="#plyr-volume"></use></svg>\n          <span class="label--pressed plyr__tooltip" role="tooltip">Unmute</span>\n          <span class="label--not-pressed plyr__tooltip" role="tooltip">Mute</span>\n      </button>\n      <div class="plyr__volume">\n          <input data-plyr="volume" type="range" min="0" max="1" step="0.05" value="1" autocomplete="off" aria-label="Volume">\n      </div>\n      </div>\n    </div>\n  </div>`}skinStamp(){return'<div class="StampAudioPlayerSkin radius">\n     <button type="button" class="muteUnmute plyr__control" data-plyr="mute"><svg class="icon--pressed" aria-hidden="true" focusable="false"><use xlink:href="#plyr-muted"></use></svg><svg class="icon--not-pressed" aria-hidden="true" focusable="false"><use xlink:href="#plyr-volume"></use></svg></button>\n     <div class="extraOptions">\n     <h3 class="audioTitle">Audio Title</h3>\n\n     <div class="audioSound">\n     <input data-plyr="volume" type="range" name="sound" id="audioRange" value=".5" min="0" max="1" step="0.001" />\n      </div>\n      </div>\n\n     <div class="mainOptions">\n     <button class="leftAudio  plyr__controls__item plyr__control" data-plyr="rewind"><svg aria-hidden="true" focusable="false"><use xlink:href="#plyr-rewind"></use></svg></button>\n\n     <div class="controls">\n     <div class="play_forward_rewind">\n      <button class="playPauseAudio  plyr__controls__item plyr__control" data-plyr="rewind"><svg aria-hidden="true" focusable="false"><use xlink:href="#plyr-rewind"></use></svg></button>\n      <button class="plyr__controls__item plyr__control playPauseAudio" type="button" data-plyr="play" aria-label="Play"><svg class="icon--pressed" aria-hidden="true" focusable="false"><use xlink:href="#plyr-pause"></use></svg><svg class="icon--not-pressed" aria-hidden="true" focusable="false"><use xlink:href="#plyr-play"></use></svg></button>\n     </div>\n\n     <div class="audioProgressView">\n      <div class="progressWrap">\n      <span class="currentTime plyr__time--current">00:00</span>\n      <div class="plyr__controls__item plyr__progress__container"><div class="plyr__progress"><input data-plyr="seek" type="range" min="0" max="100" step="0.01" value="0" autocomplete="off" role="slider" aria-label="Seek" aria-valuemin="0" aria-valuemax="100" aria-valuenow="0" id="plyr-seek-7930" aria-valuetext="00:00 of 03:05" seek-value="14.901800327332243" style="--value:0%;"><progress class="plyr__progress__buffer" min="0" max="100" value="0" role="progressbar" aria-hidden="true">% buffered</progress><span class="plyr__tooltip" style="left: 11.2357%;">00:20</span></div></div>\n      <span class="totalTime plyr__time--duration">00:00</span>\n        </div>\n        </div>\n      </div>\n\n     <button class="rightAudio plyr__controls__item plyr__control" data-plyr="fast-forward"><svg aria-hidden="true" focusable="false"><use xlink:href="#plyr-fast-forward"></use></svg></button>\n      </div>\n      </div>'}skinSimple(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return`<div class="skin_simple_sticky" style="background:${arguments.length>2&&void 0!==arguments[2]?arguments[2]:""}">\n      <div class="play">\n      <button class="plyr__controls__item plyr__control" type="button" data-plyr="play" aria-label="Play Audio"><svg class="icon--pressed" aria-hidden="true" focusable="false"><use xlink:href="#plyr-pause"></use></svg><svg class="icon--not-pressed" aria-hidden="true" focusable="false"><use xlink:href="#plyr-play"></use></svg><span class="label--pressed plyr__sr-only">Pause</span><span class="label--not-pressed plyr__sr-only">Play Audio</span></button>\n      </div>\n      <div class="title" title="${e}">${e}</div>\n      <div class="logo">\n        <img src="${arguments.length>1&&void 0!==arguments[1]?arguments[1]:""}" alt="" />\n      </div>\n    </div>`}skinWave(){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";return`<div class="wave radius">\n      <div class="thumb">\n        <img src="${arguments.length>0&&void 0!==arguments[0]?arguments[0]:""}" />\n      </div>\n      <div class="info-wave">\n        <div class="wave">\n          <canvas id="wave-canvas"></canvas>\n          <div class="plyr__time plyr__time--current" aria-label="Current time">00:00</div>\n          <div class="plyr__time plyr__time--duration" aria-label="Duration">00:00</div>\n        </div>\n        <div class="info">\n          <div class="play">\n            <button type="button" class="plyr__control" aria-label="Play, {title}" data-plyr="play">\n              <svg class="icon--pressed" role="presentation"><use xlink:href="#plyr-pause"></use></svg>\n              <svg class="icon--not-pressed" role="presentation"><use xlink:href="#plyr-play"></use></svg>\n              <span class="label--pressed plyr__tooltip" role="tooltip">Pause</span>\n              <span class="label--not-pressed plyr__tooltip" role="tooltip">Play</span>\n            </button>\n          </div>\n          <div class="title-author">\n            ${e&&`<h2 title="${e}">${e}</h2>`}\n            ${t&&`<p>${t}</p>`}\n          </div>\n          <div class="volume_controls">\n            <button type="button" class="plyr__control" aria-label="Mute" data-plyr="mute">\n                <svg class="icon--pressed" role="presentation"><use xlink:href="#plyr-muted"></use></svg>\n                <svg class="icon--not-pressed" role="presentation"><use xlink:href="#plyr-volume"></use></svg>\n                <span class="label--pressed plyr__tooltip" role="tooltip">Unmute</span>\n                <span class="label--not-pressed plyr__tooltip" role="tooltip">Mute</span>\n            </button>\n            <div class="plyr__volume">\n                <input data-plyr="volume" type="range" min="0" max="1" step="0.05" value="1" autocomplete="off" aria-label="Volume">\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>`}skinCardOne(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return`<div class="skin_card_container">\n    <div class="player">\n      <div class="like waves-effect waves-light">\n        <i class="icon-heart"></i>\n      </div>\n      <div class="mask"></div>\n      <ul class="player-info info-one">\n        <li>${e?.title}</li>\n        <li>${e?.artist}</li>\n        <li class="plyr__time--duration">0:00</li>\n      </ul>\n      <ul class="player-info info-two">\n        <li>${e?.title}</li>\n        <li>${e?.artist}</li>\n        <li><span class="plyr__time--current" id="duration"></span><i> / </i><span class="plyr__time--duration">0:00</span></li>\n      </ul>\n      <button id="play-button" type="button" class="plyr__control waves-effect waves-button waves-float play-inactive" aria-label="Play, {title}" data-plyr="play">\n        <svg class="icon--pressed icon-play" role="presentation">s<use xlink:href="#plyr-pause"></use></svg>\n        <svg class="icon--not-pressed icon-play" role="presentation"><use xlink:href="#plyr-play"></use></svg>\n        <span class="label--pressed plyr__tooltip" role="tooltip">Pause</span>\n        <span class="label--not-pressed plyr__tooltip" role="tooltip">Play</span>\n      </button>\n      <div class="control-row">\n        <div class="waves-animation-one"></div>\n        <div class="waves-animation-two"></div>\n        <div class="details">\n          <button id="pause-button" type="button" class="plyr__control" aria-label="Play, {title}" data-plyr="play">\n            <svg class="icon--pressed icon-play" role="presentation">s<use xlink:href="#plyr-pause"></use></svg>\n            <svg class="icon--not-pressed icon-play" role="presentation"><use xlink:href="#plyr-play"></use></svg>\n            <span class="label--pressed plyr__tooltip" role="tooltip">Pause</span>\n            <span class="label--not-pressed plyr__tooltip" role="tooltip">Play</span>\n          </button>\n        <div class="seek-field">\n          <div class="plyr__progress">\n            <input data-plyr="seek" type="range" min="0" max="100" step="0.01" value="0" aria-label="Seek">\n            <progress class="plyr__progress__buffer" min="0" max="100" value="0">% buffered</progress>\n            <span role="tooltip" class="plyr__tooltip">00:00</span>\n          </div>\n        </div>\n        <div class="volume_controls volume-icon">\n            <button type="button" class=" plyr__control" aria-label="Mute" data-plyr="mute">\n                <svg class="icon--pressed" role="presentation"><use xlink:href="#plyr-muted"></use></svg>\n                <svg class="icon--not-pressed" role="presentation"><use xlink:href="#plyr-volume"></use></svg>\n                <span class="label--pressed plyr__tooltip" role="tooltip">Unmute</span>\n                <span class="label--not-pressed plyr__tooltip" role="tooltip">Mute</span>\n            </button>\n            <div class="plyr__volume">\n                <input data-plyr="volume" type="range" min="0" max="1" step="0.05" value="1" autocomplete="off" aria-label="Volume">\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>`}skinCardTwo(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return`<div id="single-song-player" class="radius">\n    <img data-amplitude-song-info="cover_art_url" src="${e?.poster}"/>\n    <div class="bottom-container">\n      <progress type="range" class="amplitude-song-played-progress" min="0" max="100" step="0.01"></progress>\n\n      <div class="time-container">\n        <span class="current-time plyr__time--current"></span>\n        <span class="duration plyr__time--duration"></span>\n      </div>\n\n      <div class="control-container">\n        <button id="play-button" type="button" class="plyr__control amplitude-play-pause" aria-label="Play, ${e.title}" data-plyr="play">\n          <svg class="icon--pressed icon-play" role="presentation">s<use xlink:href="#plyr-pause"></use></svg>\n          <svg class="icon--not-pressed icon-play" role="presentation"><use xlink:href="#plyr-play"></use></svg>\n          <span class="label--pressed plyr__tooltip" role="tooltip">Pause</span>\n          <span class="label--not-pressed plyr__tooltip" role="tooltip">Play</span>\n        </button>\n        <div class="meta-container">\n          <span data-amplitude-song-info="name" class="song-name">${e?.title}</span>\n          <span data-amplitude-song-info="artist">${e?.artist}</span>\n        </div>\n      </div>\n    </div>\n  </div>`}skinSimpleOne(){return'<div class="h5ap-player-skin-5 radius">\n        <div class="progress-time">\n            <div>\n                <div class="plyr__progress">\n                    <input data-plyr="seek" type="range" min="0" max="100" step="0.01" value="0" aria-label="Seek">\n                    <progress class="plyr__progress__buffer" min="0" max="100" value="0">% buffered</progress>\n                    <span role="tooltip" class="plyr__tooltip">00:00</span>\n                </div>\n            </div>\n            <div class="time">\n                <div class="plyr__time plyr__time--current" aria-label="Current time">00:00</div>\n                <div class="plyr__time plyr__time--duration" aria-label="Duration">00:00</div>\n            </div>\n        </div>\n      <div class="controls">\n        <button type="button" class="plyr__control" data-plyr="rewind">\n          <svg role="presentation"><use xlink:href="#plyr-rewind"></use></svg>\n          <span class="plyr__tooltip" role="tooltip">Rewind {seektime} secs</span>\n        </button>\n        <button type="button" class="plyr__control" aria-label="Play, {title}" data-plyr="play">\n          <svg class="icon--pressed" role="presentation"><use xlink:href="#plyr-pause"></use></svg>\n          <svg class="icon--not-pressed" role="presentation"><use xlink:href="#plyr-play"></use></svg>\n          <span class="label--pressed plyr__tooltip" role="tooltip">Pause</span>\n          <span class="label--not-pressed plyr__tooltip" role="tooltip">Play</span>\n        </button>\n        <button type="button" class="plyr__control" data-plyr="fast-forward">\n          <svg role="presentation"><use xlink:href="#plyr-fast-forward"></use></svg>\n          <span class="plyr__tooltip" role="tooltip">Forward {seektime} secs</span>\n        </button>\n      </div>\n    </div>'}skinSimpleTwo(e){let{poster:t}=e;return`<div class="h5ap-player-skin-6">\n        <div class="progress-time">\n            <div class="thumbnail"><img src="${t}" /></div>\n        </div>\n      <div class="controls">\n        <button type="button" class="plyr__control" data-plyr="rewind">\n          <svg role="presentation"><use xlink:href="#plyr-rewind"></use></svg>\n          <span class="plyr__tooltip" role="tooltip">Rewind {seektime} secs</span>\n        </button>\n        <button type="button" class="plyr__control" aria-label="Play, {title}" data-plyr="play">\n          <svg class="icon--pressed" role="presentation"><use xlink:href="#plyr-pause"></use></svg>\n          <svg class="icon--not-pressed" role="presentation"><use xlink:href="#plyr-play"></use></svg>\n          <span class="label--pressed plyr__tooltip" role="tooltip">Pause</span>\n          <span class="label--not-pressed plyr__tooltip" role="tooltip">Play</span>\n        </button>\n        <button type="button" class="plyr__control" data-plyr="fast-forward">\n          <svg role="presentation"><use xlink:href="#plyr-fast-forward"></use></svg>\n          <span class="plyr__tooltip" role="tooltip">Forward {seektime} secs</span>\n        </button>\n      </div>\n    </div>`}disablePause(e){e.on("pause",(function(){e.ended||e.play()}))}getDetectorData(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=null,{options:s,infos:n,initializer:l,selector:i}=t;return null!==e&&(void 0!==e[0]?(e.map(((e,t)=>{this[l](t,s,n)})),!1):(void 0===e.length||0!==e.length)&&(null!==e.querySelector(i)&&(e=e.querySelector(i)),s||null==jQuery(e).attr("data-options")||(s=JSON.parse(jQuery(e).attr("data-options"))),n||null==jQuery(e).attr("data-infos")||(n=JSON.parse(jQuery(e).attr("data-infos"))),a=e.querySelector("audio"),{wrapper:e,options:s,infos:n,mediaElement:a}))}cardOne(e,t){let a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";const s=e.querySelector(".details"),n=e.querySelector(".mask"),l=e.querySelector("#play-button"),i=e.querySelector(".player-info.info-one"),o=e.querySelector(".player-info.info-two"),r=e.querySelector(".skin_card_container"),p=e.querySelector(".waves-animation-one");n.style.background=`url(${a})`,t.on("play",(function(){r.classList.add("playing"),l.classList.add("play-active"),l.classList.remove("play-inactive"),l.style.display="none",i.style.display="none",o.style.display="block",o.classList.add("info-active"),p.style.display="block",s.style.display="block"})),t.on("ready",(function(){var e,a,s,n,l;o.querySelector(".plyr__time--duration").innerText=(e=t.duration,a=parseInt(e,10),s=Math.floor(a/3600),n=Math.floor((a-3600*s)/60),l=a-3600*s-60*n,s<10&&(s="0"+s),n<10&&(n="0"+n),l<10&&(l="0"+l),n+":"+l)}))}cardTwo(e,t){const a=e.querySelector(".amplitude-song-played-progress");a.addEventListener("click",(function(e){const s=t.duration/a.offsetWidth;t.currentTime=e.offsetX*s})),t.on("timeupdate",(function(){a.setAttribute("value",100/t.duration*t.currentTime)}))}wave(e,t){let a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"#fff",s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"#333";const n=jQuery(e).find("audio"),l=jQuery(e).find(".title-author h2");if(l){const e=l.text(),t=e.length>l?.width()/10.5?"...":"";jQuery(l).text(e.substr(0,l?.width()/10.5)+t)}const i=new(window.AudioContext||window.webkitAudioContext||!1);if(i){var o=i.createMediaElementSource(n[0]),r=i.createAnalyser(),p=jQuery(e).find("#wave-canvas")[0];if(p){p.width=window.innerWidth,p.height=window.innerHeight;var d=p.getContext("2d");o.connect(r),r.connect(i.destination),r.fftSize=512,e?.offsetWidth>800&&(r.fftSize=1024);var c,u=r.frequencyBinCount,y=new Uint8Array(u),v=p.width,m=p.height,_=v/u*1,f=0;const n=()=>{requestAnimationFrame(n),f=0,r.getByteFrequencyData(y),d.fillStyle=s,d.fillRect(0,0,v,m);for(var e=0;e<u;e++)c=t.playing?y[e]:y[e]+100,d.fillStyle=a,d.fillRect(f,m-c-80,_,c+80),f+=_+5};n()}jQuery(e).find('[data-plyr="play"]').one("click",(function(){i.resume()}))}}};var t;(t=jQuery)(document).ready((function(){if(!document.getElementById("h5ap-player-js")&&"undefined"!=typeof h5apPlayer){const e=document.createElement("script");e.src=window?.h5apPlayer?.plyrio_js||!1,e.src&&document.getElementsByTagName("head")[0].appendChild(e),e.id="bplugins-plyrio-js";var a=document.createElement("script");a.src=window?.h5apPlayer?.plyr_js||!1,a.id="h5ap-player-js",a.src&&document.getElementsByTagName("head")[0].appendChild(a)}const s=document.querySelectorAll(".h5ap_standard_player");Object.keys(s).map((a=>{const n=t(s[a])[0];let l=n.dataset.options;try{l="{"==l?{}:JSON.parse(l)}catch(e){l={}}l.poster=l.poster??n.dataset?.poster,l.source=l.source??n.dataset?.song,l.skin=l.skin??n.dataset?.skin,l.title=l.title??n.dataset?.title,n.removeAttribute("data-options"),n.removeAttribute("data-song"),l&&e.audioPlayer(n,l)})),e.stickyPlayer2(t(".h5ap_sticky_player"));const n=document.querySelectorAll(".h5ap_quick_player");Object.keys(n).map((a=>{const s=t(n[a]);e.quickPlayer(s)}))})),t(window).on("elementor/frontend/init",(function(){elementorFrontend.hooks.addAction("frontend/element_ready/StampAudioPlayer.default",(function(t,a){const s=a(t).find(".stampAudioPlayer");s.map(((t,n)=>{n=a(s[t]);let l=a(n).data("option");l.source=l.source??a(n).data("song"),l.poster=l.poster??a(n).data("poster"),e.audioPlayer(n[0],l)}))})),elementorFrontend.hooks.addAction("frontend/element_ready/FusionAudioPlayer.default",(function(t,a){const s=a(t).find(".h5ap_fusion_player");s.map(((t,n)=>{n=a(s[t]);const l=a(n).data("option");l.source=l.source??a(n).data("song"),l.poster=l.poster??a(n).data("poster"),e.audioPlayer(n[0],l)}))})),elementorFrontend.hooks.addAction("frontend/element_ready/SimpleAudioPlayer.default",(function(t,a){const s=a(t).find(".h5ap_standard_player");s.map(((t,n)=>{n=a(s[t]);const l=a(n).data("options")||{};a(n).removeAttr("data-options"),l.source=l?.source??a(n).data("song"),l.poster=l?.poster??a(n).data("poster"),e.audioPlayer(n[0],l)}))}))}))})();
//# sourceMappingURL=player.js.map